{
  "openapi": "3.0.0",
  "info": {
    "title": "Users service",
    "version": "0.0.0"
  },
  "tags": [],
  "paths": {
    "/api/users": {
      "get": {
        "operationId": "getUsers",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/UserDetailsResponse"
                      }
                    },
                    {
                      "$ref": "#/components/schemas/InvalidRequestError"
                    },
                    {
                      "$ref": "#/components/schemas/UnauthorizedError"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/users/search": {
      "get": {
        "operationId": "searchUsers",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/UserDetailsResponse"
                      }
                    },
                    {
                      "$ref": "#/components/schemas/InvalidRequestError"
                    },
                    {
                      "$ref": "#/components/schemas/UnauthorizedError"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/users/{user_id}": {
      "get": {
        "operationId": "getUserById",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/UserDetailsResponse"
                    },
                    {
                      "$ref": "#/components/schemas/InvalidRequestError"
                    },
                    {
                      "$ref": "#/components/schemas/UnauthorizedError"
                    },
                    {
                      "$ref": "#/components/schemas/NotFoundError"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "updateUserDetails",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/UserDetailsResponse"
                    },
                    {
                      "$ref": "#/components/schemas/InvalidRequestError"
                    },
                    {
                      "$ref": "#/components/schemas/UnauthorizedError"
                    },
                    {
                      "$ref": "#/components/schemas/NotFoundError"
                    }
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserRequest"
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteUser",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/InvalidRequestError"
                    },
                    {
                      "$ref": "#/components/schemas/UnauthorizedError"
                    }
                  ]
                }
              }
            }
          },
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. "
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ErrorResponse": {
        "type": "object",
        "required": [
          "code",
          "message"
        ],
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "InvalidRequestError": {
        "type": "object",
        "required": [
          "code",
          "message"
        ],
        "properties": {
          "code": {
            "type": "number",
            "enum": [
              400
            ]
          },
          "message": {
            "type": "string",
            "enum": [
              "Invalid Request"
            ]
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/ErrorResponse"
          }
        ]
      },
      "NotFoundError": {
        "type": "object",
        "required": [
          "code",
          "message"
        ],
        "properties": {
          "code": {
            "type": "number",
            "enum": [
              404
            ]
          },
          "message": {
            "type": "string",
            "enum": [
              "Not Found"
            ]
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/ErrorResponse"
          }
        ]
      },
      "UnauthorizedError": {
        "type": "object",
        "required": [
          "code",
          "message"
        ],
        "properties": {
          "code": {
            "type": "number",
            "enum": [
              401
            ]
          },
          "message": {
            "type": "string",
            "enum": [
              "Unauthorized"
            ]
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/ErrorResponse"
          }
        ]
      },
      "UpdateUserRequest": {
        "type": "object",
        "properties": {
          "userName": {
            "type": "string"
          },
          "fullName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "province": {
            "type": "string"
          },
          "street": {
            "type": "string"
          },
          "unitNumber": {
            "type": "string"
          },
          "zipCode": {
            "type": "string"
          }
        }
      },
      "UserDetailsResponse": {
        "type": "object",
        "required": [
          "userName",
          "fullName",
          "email",
          "phoneNumber",
          "country",
          "city",
          "province",
          "street",
          "zipCode"
        ],
        "properties": {
          "userName": {
            "type": "string"
          },
          "fullName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "province": {
            "type": "string"
          },
          "street": {
            "type": "string"
          },
          "unitNumber": {
            "type": "string"
          },
          "zipCode": {
            "type": "string"
          }
        }
      }
    }
  }
}
